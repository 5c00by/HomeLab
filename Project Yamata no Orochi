# Overview

  This project is intended to have a mobile Kali Linux environment for testing and learning pentesting techniques. The idea is more geared towards Red Team style environment while another part of the project to be deveolped later is to learn more Blue Team techniques within a controlled environment. The name for the project comes from the fact that Kali linux's Avatar is a dragon. 

# Materials Used. 

  For this project I am using a Lg Nexus 5x 32gig cellphone. Part of this reason is that the device is no longer supported due to a defect from the processor ( see snapdragon 808 soldering issue) and should the preparation brick the device replacement parts are easier to come by and repair is less intensive. Also there is room for experimental expansion if deemed necessary. Due to the Chipset being similar to other related smartphones of that line there is a smaller market for expanded RAM/HDD space that can be easily added to the device. Parts would need to be sourced from a market like Alibaba and as of this post ususally retail around $80. This could potentially expand the device to a possible 4 gb of ram ( up from the 2 that this came with) and in rarer cases a possible 128 gb of space (max size sold was 32 originally.) This shouldn't be needed but would be a nice expansion and may possibly depending on the quality of the board would go around the SD808's soldering issue but would strongly suggest procuring a "donor" or "spare" phone to attempt this on in light of the risks involved. 
  
    The second thing we will need is a Testing environment to act as our "target". As this will eventually involve exploits it will be essential to make sure I am not treading the line of illegality. Luckiy there are a few spare computers and routers I have around that could make a test environment and there are plenty of online resourses to learn the theory and practice with. This would help however in learning scenarios in which comprmising the device phyically ( ie: USB Rubber Ducky) would be necessary.

# Software 

  The main Crux of this is what software would be used. As I have previoulsy next to no experience in this field I needed something flexible that I can replicate easily and follow back on. This would prove difficult for a Smartphone device. However with this being a mobile application in mind this is the limitation i will need to work around. 

The Nexus 5x will be using a Custom Android rom called MaruOs (https://maruos.com/) for it's operating system and we will be instaling Kali Linux Nethunter (https://www.kali.org/kali-linux-nethunter/) on top of it along with the Kali Linux Appstore on top of this (https://www.kali.org/news/kali-nethunter-app-store/). The reasoning is that while for most things Nethunter on it's own would be enough we needed to remove the need for Google and also the key feature of Maru is that it offers a "Desktop" mode using Debian Linux and can use a keyboard and mouse to give a full desktop environment as well. All that would be needed would be a compatible dock of somekind or an ability to stream to a larger screen. The limitation is that without the Google Apps Suite this limits to a phyical connection or MiraCast being used at present. The kali Linux App Store gives an environment similar to F-droid (https://f-droid.org/en/) to get a suite of tools to be used. Also if using Fdroid Specifically the Kali Linux Store's repo can be added to Fdroid as well. 

 This also gives us the ability to add additional repos and apps to be used for some purposes. For example I added Bitwarden's repo in order for the rare password save and password creation. Yubikey's app for 2 factor authentication and password retention among others that I can add later.

  One of the other noted reasons I went with MaruOs for this is that their most recent build as of this project changed the base of the ROM. Instead of being based on AOSP (Android Open Source Project) Exclusively it's now based around the LineageOs (previously CyanogenMod) ROMs instead. This gives the easier possibility of controling root acces for the lazy and that updates may come quicker (if at all in the devices case). This also means there is a better chance that some of the bug fixes to address the SD808's flaws would work better. For example there is a workaround to "turn off" the larger cores that cause the overheating issue that causes the solder to fail early. Also the ROM isn't too disimilar from Cyanogen's which is what Nethunter originally worked for so troubleshooting may be easier to work around.   Also in line is that the OS itself is lightweight. As Depending on the tools needed a full Chroot install can take up much needed valuable space. 


# Setup and Install 
  
